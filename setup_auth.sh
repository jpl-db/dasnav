#!/bin/bash
# Setup script for Databricks authentication

echo "🔐 Databricks Authentication Setup for logfood-central"
echo "======================================================"
echo ""

# Check if Databricks CLI is installed
if ! command -v databricks &> /dev/null; then
    echo "❌ Databricks CLI is not installed."
    echo "📦 Installing Databricks CLI..."
    curl -fsSL https://raw.githubusercontent.com/databricks/setup-cli/main/install.sh | sh
else
    echo "✅ Databricks CLI is installed ($(databricks --version))"
fi

echo ""
echo "Please enter your Databricks workspace URL for logfood-central:"
echo "Example: https://your-workspace.cloud.databricks.com"
read -p "Workspace URL: " WORKSPACE_URL

# Authenticate with Databricks using OAuth
echo ""
echo "🔑 Setting up OAuth authentication..."
echo "This will open your browser for authentication."
echo ""
databricks auth login --host "$WORKSPACE_URL"

if [ $? -eq 0 ]; then
    echo ""
    echo "✅ Authentication successful!"
    echo ""
    echo "📝 Creating .env file..."
    
    # Ask for SQL Warehouse ID
    echo ""
    echo "Please enter your SQL Warehouse ID:"
    echo "You can find this in Databricks UI under SQL > Warehouses"
    echo "(Look for the warehouse ID in the URL or warehouse details)"
    read -p "SQL Warehouse ID: " WAREHOUSE_ID
    
    # Create .env file
    cat > .env << EOF
# Databricks Configuration for Local Development
# Auto-generated by setup_auth.sh

# Databricks workspace URL for logfood-central environment
DATABRICKS_HOST=$WORKSPACE_URL

# SQL Warehouse ID for running queries
DATABRICKS_SQL_WAREHOUSE_ID=$WAREHOUSE_ID

# OAuth authentication is configured via Databricks CLI
# Authentication is handled automatically via ~/.databrickscfg
EOF

    echo ""
    echo "✅ .env file created successfully!"
    echo ""
    echo "🎉 Setup complete! You can now run the app locally with:"
    echo "   source venv/bin/activate"
    echo "   streamlit run app.py --server.port 8000"
    echo ""
    echo "The app will use your Databricks credentials to query tables."
    
else
    echo ""
    echo "❌ Authentication failed. Please try again."
    exit 1
fi
